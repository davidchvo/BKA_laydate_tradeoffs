tibble(NestlingAge = Offset,
bkc = scbkc*attr(scaled_pc$scbkc, "scaled:scale") + attr(scaled_pc$scbkc, "scaled:center"),
LayDate = jlaydate,
fit = fit, se = se,
lwr = fit - 1.96*se, upr = fit + 1.96*se))
}
bk_colors <- c("#3B528BFF", "#5DC863FF")
hourly_provisioning <- ggplot() +
scale_fill_manual(name = "Prop. of Bacteria Killed",
values = bk_colors,
labels = c("0%", "100%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top") ) +
scale_color_manual(name = "Prop. of Bacteria Killed",
values = bk_colors,
labels = c("0%", "100%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top") ) +
scale_linetype_manual(name = "Prop. of Bacteria Killed",
values=c("twodash", "solid"),
labels = c("0%", "100%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top") ) +
geom_line(data = plot_data_provisioning_m9,
aes(x = NestlingAge,
y = fit,
group = bkc,
linetype = as.factor(bkc),
color = as.factor(bkc)),
size = 1) +
geom_ribbon(data = plot_data_provisioning_m9,
aes(x = NestlingAge,
ymin = lwr, ymax = upr,
group = as.factor(bkc),
fill = as.factor(bkc) ), alpha = 0.2) +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1),
legend.position = c(0.5,0.2),
legend.background = element_rect(fill=NA),
legend.text.align = 0.5,
legend.title.align = 0.5,
legend.key.width = unit(1,"cm"),
legend.key = element_rect(fill = NA)) +
labs(title = "",
x = "Nestling age (days)",
y = "Feeding rate (visits per hour)") +
scale_x_continuous(limits = c(1, 20), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 20), expand = c(0,0)); hourly_provisioning
provisioning_m4 <- glmer(data = scaled_pc, FemFeed ~ scBrood_Size_Hatching +
I(scBrood_Size_Hatching^2) + scOffset + I(scOffset^2) +
scHour + I(scHour^2) + scjlaydate + sctemp +
Treatment + scMalFeed + scBrood_Size_Hatching*scOffset +
(1|Individual_Band),
family=poisson(link="log"),
control = glmerControl(optimizer = "Nelder_Mead"));
summary(provisioning_m4)
provisioning_m5 <- glmer(data = scaled_pc, FemFeed ~ scBrood_Size_Hatching +
I(scBrood_Size_Hatching^2) + scOffset + I(scOffset^2) +
scHour + I(scHour^2) + scjlaydate + sctemp +
Treatment + scMalFeed + scBrood_Size_Hatching*scOffset +
(1|Individual_Band) + scbkc,
family=poisson(link="log"))
summary(provisioning_m5)
provisioning_m6 <- glmer(data = scaled_pc, FemFeed ~ scBrood_Size_Hatching +
I(scBrood_Size_Hatching^2) + scOffset + I(scOffset^2) +
scHour + I(scHour^2) + sctemp +
Treatment + scBrood_Size_Hatching*scOffset + scMalFeed +
(1|Individual_Band) + scbkc*scjlaydate,
family=poisson(link="log"))
summary(provisioning_m6)
# ICtab(provisioning_m4, provisioning_m5, provisioning_m6, type = "AIC")
feeding_rate_wMales <- model.avg(provisioning_m4, provisioning_m5, provisioning_m6, revised.var = TRUE)
summary(feeding_rate_wMales)
ggplot(df) +
geom_histogram(aes(x=prop.ml),
colour = "white", bins = 15) +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1)) +
scale_y_continuous(expand = c(0,0)) +
labs(x= "Mass lost (g)",
y = "No. of individuals")
prop_mass_loss_m1 <- glm(prop.ml ~ ylaydate + Brood_Size_Hatching + Treatment2,
family = gaussian(link = "identity"),
data = df)
summary(prop_mass_loss_m1)
prop_mass_loss_m2 <- glm(prop.ml ~ Bacteria_Killing_Assay + ylaydate + Brood_Size_Hatching + Treatment2,
family = gaussian(link = "identity"),
data = df)
summary(prop_mass_loss_m2)
prop_mass_loss_m3 <- glm(prop.ml ~ Bacteria_Killing_Assay*ylaydate + Brood_Size_Hatching + Treatment2,
family = gaussian(link = "identity"),
data = df)
summary(prop_mass_loss_m3)
# ICtab(prop_mass_loss_m1, prop_mass_loss_m2, prop_mass_loss_m3, type = "AICc")
mass_loss <- model.avg(prop_mass_loss_m1, prop_mass_loss_m2, prop_mass_loss_m3, revised.var = TRUE)
summary(mass_loss)
success_m1 <- glm(success ~ Brood_Size_Hatching + ylaydate + Treatment2,
family = binomial(link = "logit"),
data = df )
summary(success_m1)
success_m2 <- glm(success ~ Bacteria_Killing_Assay + Brood_Size_Hatching +
ylaydate + Treatment2, family = binomial(link = "logit"),
data = df )
summary(success_m2)
success_m3 <- glm(success ~ Bacteria_Killing_Assay*ylaydate +
Brood_Size_Hatching + Treatment2,
family = binomial(link = "logit"),
data = df )
summary(success_m3)
# ICtab(success_m1, success_m2, success_m3, type = "AICc")
success <- model.avg(success_m1, success_m2, success_m3, revised.var = TRUE)
summary(success)
ggplot(filter(df, .fledged > 0 )) +
geom_histogram(aes(x=.fledged),
colour = "white", bins = 15) +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1)) +
scale_y_continuous(expand = c(0,0)) +
labs(x= "Number of nestlings fledged",
y = "No. of individuals")
fledged_m1 <- glm(.fledged ~ Brood_Size_Hatching + ylaydate +  Treatment2,
family = quasipoisson(link = "log"),
data = filter(df, .fledged > 0 ) )
summary(fledged_m1)
fledged_m2 <- glm(.fledged ~ Bacteria_Killing_Assay + Brood_Size_Hatching +
ylaydate + Treatment2, family = quasipoisson(link = "log"),
data = filter(df, .fledged > 0 ) )
summary(fledged_m2)
fledged_m3 <- glm(.fledged ~ Bacteria_Killing_Assay*ylaydate +
Brood_Size_Hatching + Treatment2,
family = quasipoisson(link = "log"),
data = filter(df, .fledged > 0 ) )
summary(fledged_m3)
# redefine models to poisson
fledged_m1p <- glm(.fledged ~ Brood_Size_Hatching + ylaydate +  Treatment,
family = poisson(link = "log"),
data = filter(df, .fledged > 0 ) )
fledged_m2p <- glm(.fledged ~ Bacteria_Killing_Assay + Brood_Size_Hatching +
ylaydate + Treatment, family = poisson(link = "log"),
data = filter(df, .fledged > 0 ) )
fledged_m3p <- glm(.fledged ~ Bacteria_Killing_Assay*ylaydate +
Brood_Size_Hatching + Treatment,
family = poisson(link = "log"),
data = filter(df, .fledged > 0 ) )
# ICtab(fledged_m1p, fledged_m2p, fledged_m3p, dispersion = dfun(fledged_m1p), type = "qAICc")
# calculate overdispersion
disp = dfun(fledged_m3)
# update qAICc in models
fledged_m1$aic <- update.qAICc(fledged_m1p, dispersion = disp)
fledged_m2$aic <- update.qAICc(fledged_m2p, dispersion = disp)
fledged_m3$aic <- update.qAICc(fledged_m3p, dispersion = disp)
summary(model.avg(fledged_m1, fledged_m2, fledged_m3, revised.var = TRUE))
ggplot(filter(nd, Nestling_Fate == "Fledged")) +
geom_histogram(aes(x = Nestling_Mass),
colour = "white", bins = 15) +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1)) +
scale_y_continuous(expand = c(0,0)) +
labs(x= "Nestling mass at day 12 (g)",
y = "No. of individuals")
nestling_m1 <- lmer(Nestling_Mass ~ Brood_Size_Hatching +
ylaydate + Treatment2 + temp + (1|Unit_Box),
data = filter(nd,
Nestling_Fate == "Fledged",
Bacteria_Killing_Assay != "NA") )
summary(nestling_m1)
nestling_m2 <- lmer(Nestling_Mass ~ Bacteria_Killing_Assay +
Brood_Size_Hatching + temp +
ylaydate + Treatment2 + (1|Unit_Box),
data = filter(nd,
Nestling_Fate == "Fledged",
Bacteria_Killing_Assay != "NA") )
summary(nestling_m2)
nestling_m3 <- lmer(Nestling_Mass ~ Bacteria_Killing_Assay*ylaydate +
Brood_Size_Hatching + temp +
Treatment2 + (1|Unit_Box),
data = filter(nd,
Nestling_Fate == "Fledged",
Bacteria_Killing_Assay != "NA") )
summary(nestling_m3)
# ICtab(nestling_m1, nestling_m2, nestling_m3, type = "AICc")
nestling_mass <- model.avg(nestling_m1, nestling_m2, nestling_m3, revised.var = TRUE)
summary(nestling_mass)
return_m1 <- glm(return2020 ~ success + ylaydate + Age + Treatment2,
family = binomial(link = "logit"),
data = df)
summary(return_m1)
return_m2 <- glm(return2020 ~ success + ylaydate + Age + Treatment2 + Bacteria_Killing_Assay,
family = binomial(link = "logit"),
data = df)
summary(return_m2)
return_m3 <- glm(return2020 ~ success + Age + Treatment2 + Bacteria_Killing_Assay*ylaydate,
family = binomial(link = "logit"),
data = df)
summary(return_m3)
# ICtab(return_m1, return_m2, return_m3, type = "AICc")
summary(model.avg(return_m1, return_m2, return_m3, revised.var = TRUE))
ggplot() + geom_histogram(aes(df$ylaydate), bins = 15, colour = "white") +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1)) +
scale_y_continuous(limits = c(0, 10), breaks=seq(0,10,by=2),
expand = c(0,0)) +
labs(x = "Lay Date (day of year)", y = "No. of individuals")
df$ylaydate %>%
summarise(mean = mean(), median = median(), min = as.Date("2019-01-01") + min(),
max = as.Date("2019-01-01") + min())
ggplot() + geom_histogram(aes(df$ylaydate), bins = 15, colour = "white") +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1)) +
scale_y_continuous(limits = c(0, 10), breaks=seq(0,10,by=2),
expand = c(0,0)) +
labs(x = "Lay Date (day of year)", y = "No. of individuals")
df %>%
select(ylaydate) %>%
summarise(mean = mean(), median = median(), min = as.Date("2019-01-01") + min(),
max = as.Date("2019-01-01") + min())
df %>%
select(ylaydate)
ggplot() + geom_histogram(aes(df$ylaydate), bins = 15, colour = "white") +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1)) +
scale_y_continuous(limits = c(0, 10), breaks=seq(0,10,by=2),
expand = c(0,0)) +
labs(x = "Lay Date (day of year)", y = "No. of individuals")
df %>%
select(ylaydate) %>%
summarize(mean = mean(), median = median(), min = as.Date("2019-01-01") + min(),
max = as.Date("2019-01-01") + min())
ggplot() + geom_histogram(aes(df$ylaydate), bins = 15, colour = "white") +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1)) +
scale_y_continuous(limits = c(0, 10), breaks=seq(0,10,by=2),
expand = c(0,0)) +
labs(x = "Lay Date (day of year)", y = "No. of individuals")
df %>%
select(ylaydate) %>%
summarise(mean = mean(ylaydate), median = median(ylaydate),
min = as.Date("2019-01-01") + min(ylaydate),
max = as.Date("2019-01-01") + max(ylaydate))
summary(glm(bk ~ ylaydate, family = Gamma(link="inverse"),
data = df))
ggplot() + geom_histogram(aes(df$ylaydate), bins = 15, colour = "white") +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1)) +
scale_y_continuous(limits = c(0, 10), breaks=seq(0,10,by=2),
expand = c(0,0)) +
labs(x = "Lay Date (day of year)", y = "No. of individuals")
df %>%
select(ylaydate) %>%
summarise(mean = as.Date("2019-01-01") + mean(ylaydate),
median = as.Date("2019-01-01") +median(ylaydate),
min = as.Date("2019-01-01") + min(ylaydate),
max = as.Date("2019-01-01") + max(ylaydate))
summary(glm(bk ~ ylaydate, family = Gamma(link="inverse"),
data = df))
head(sort(lay_dates), n = round(length(lay_dates)*0.1))
sort(lay_dates), n = round(length(lay_dates)*0.1))
tail(sort(lay_dates), n = round(length(lay_dates)*0.1))
ggplot() + geom_histogram(aes(df$ylaydate), bins = 15, colour = "white") +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1)) +
scale_y_continuous(limits = c(0, 10), breaks=seq(0,10,by=2),
expand = c(0,0)) +
labs(x = "Lay Date (day of year)", y = "No. of individuals")
df %>%
select(ylaydate) %>%
summarise(mean = as.Date("2019-01-01") + mean(ylaydate),
median = as.Date("2019-01-01") +median(ylaydate),
min = as.Date("2019-01-01") + min(ylaydate),
max = as.Date("2019-01-01") + max(ylaydate),
Early_10p = as.Date("2019-01-01") + mean(head(sort(ylaydate), n = round(length(lay_dates)*0.1))),
Late_10p = as.Date("2019-01-01") + mean(tail(sort(ylaydate), n = round(length(lay_dates)*0.1)))
)
summary(glm(bk ~ ylaydate, family = Gamma(link="inverse"),
data = df))
#plot data
n = 3
new_data <- tibble(ylaydate = rep(lay_groups, each = 100),
Age = rep("ASY", n*100),
Bacteria_Killing_Assay = rep(seq(-0.2,1,length.out = 100), n))
plot_data_clutch_ld <- cbind(predict(clutch_m2,new_data,
type = "response", se.fit = TRUE), new_data) %>%
mutate(lwr = fit - 1.96*se.fit,
upr = fit + 1.96*se.fit)
clutch_ld <- ggplot() +
scale_fill_manual(name = "Lay Date",
values = lay_colors,
labels = c("Earliest 10%", "Mean", "Latest 10%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top",
label.position = "bottom"
)) +
scale_color_manual(name = "Lay Date",
values = lay_colors,
labels = c("Earliest 10%", "Mean", "Latest 10%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top",
label.position = "bottom"
)) +
scale_linetype_manual(name = "Lay Date",
values = lay_lines,
labels = c("Earliest 10%", "Mean", "Latest 10%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top",
label.position = "bottom"
) ) +
geom_vline(aes(xintercept = 0), color = "grey", linetype = "dashed", size = 0.5) +
annotate("text", x = 0.01, y = 0.95*8,
label = paste("Inhibition"),
hjust = 0, size = 2) +
annotate("text", x = -0.015, y = 0.95*8,
label = paste("Growth"),
hjust = 1, size = 2) +
geom_point(data = drop_na(filter(df, Capture_Number == 1), ylaydate),
aes(x = Bacteria_Killing_Assay,
y = Clutch_Size),
color = "grey",
alpha = 0.5) +
geom_line(aes(x = plot_data_clutch_ld$Bacteria_Killing_Assay,
y = plot_data_clutch_ld$fit,
group = plot_data_clutch_ld$ylaydate, colour = as.factor(plot_data_clutch_ld$ylaydate),
linetype = as.factor(plot_data_clutch_ld$ylaydate)),
size = 1) +
geom_ribbon(data = plot_data_clutch_ld,
aes(x = Bacteria_Killing_Assay,
ymin = lwr, ymax = upr,
group = ylaydate, fill = as.factor(ylaydate)), alpha = 0.2) +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1),
legend.position = c(0.5, 0.2),
legend.background = element_rect(fill=NA),
legend.text.align = 0.5,
legend.title.align = 0.5,
legend.key.width = unit(1.5,"cm"),
legend.key = element_rect(fill = NA)) +
labs(title = "",
x = "Prop. of Bacteria Killed",
y = "Clutch size (eggs)",
color = "Lay Date",
linetype = "Lay Date") +
scale_x_continuous(limits = c(-0.2, 1.05), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 8), expand = c(0,0)) +
annotate("text", x = 0.95, y = 0.95*8,
label = paste("n =", nrow(clutch_m2$model)),
hjust = 1); clutch_ld
#plot data
n = 3
new_data <- tibble(ylaydate = rep(lay_groups, each = 100),
Age = rep("ASY", n*100),
Bacteria_Killing_Assay = rep(seq(-0.2,1,length.out = 100), n))
plot_data_clutch_ld <- cbind(predict(clutch_m2,new_data,
type = "response", se.fit = TRUE), new_data) %>%
mutate(lwr = fit - 1.96*se.fit,
upr = fit + 1.96*se.fit)
clutch_ld <- ggplot() +
scale_fill_manual(name = "Lay Date",
values = lay_colors,
labels = c("Earliest 10%", "Mean", "Latest 10%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top",
label.position = "bottom"
)) +
scale_color_manual(name = "Lay Date",
values = lay_colors,
labels = c("Earliest 10%", "Mean", "Latest 10%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top",
label.position = "bottom"
)) +
scale_linetype_manual(name = "Lay Date",
values = lay_lines,
labels = c("Earliest 10%", "Mean", "Latest 10%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top",
label.position = "bottom"
) ) +
geom_vline(aes(xintercept = 0), color = "grey", linetype = "dashed", size = 0.5) +
annotate("text", x = 0.01, y = 0.95*8,
label = paste("Inhibition"),
hjust = 0, size = 2) +
annotate("text", x = -0.015, y = 0.95*8,
label = paste("Growth"),
hjust = 1, size = 2) +
geom_point(data = df,
aes(x = Bacteria_Killing_Assay,
y = Clutch_Size),
color = "grey",
alpha = 0.5) +
geom_line(aes(x = plot_data_clutch_ld$Bacteria_Killing_Assay,
y = plot_data_clutch_ld$fit,
group = plot_data_clutch_ld$ylaydate, colour = as.factor(plot_data_clutch_ld$ylaydate),
linetype = as.factor(plot_data_clutch_ld$ylaydate)),
size = 1) +
geom_ribbon(data = plot_data_clutch_ld,
aes(x = Bacteria_Killing_Assay,
ymin = lwr, ymax = upr,
group = ylaydate, fill = as.factor(ylaydate)), alpha = 0.2) +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1),
legend.position = c(0.5, 0.2),
legend.background = element_rect(fill=NA),
legend.text.align = 0.5,
legend.title.align = 0.5,
legend.key.width = unit(1.5,"cm"),
legend.key = element_rect(fill = NA)) +
labs(title = "",
x = "Prop. of Bacteria Killed",
y = "Clutch size (eggs)",
color = "Lay Date",
linetype = "Lay Date") +
scale_x_continuous(limits = c(-0.2, 1.05), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 8), expand = c(0,0)) +
annotate("text", x = 0.95, y = 0.95*8,
label = paste("n =", nrow(clutch_m2$model)),
hjust = 1); clutch_ld
#plot data
n = 3
new_data <- tibble(ylaydate = rep(lay_groups, each = 100),
Age = rep("ASY", n*100),
Bacteria_Killing_Assay = rep(seq(-0.2,1,length.out = 100), n))
plot_data_clutch_ld <- cbind(predict(clutch_m3,new_data,
type = "response", se.fit = TRUE), new_data) %>%
mutate(lwr = fit - 1.96*se.fit,
upr = fit + 1.96*se.fit)
clutch_ld <- ggplot() +
scale_fill_manual(name = "Lay Date",
values = lay_colors,
labels = c("Earliest 10%", "Mean", "Latest 10%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top",
label.position = "bottom"
)) +
scale_color_manual(name = "Lay Date",
values = lay_colors,
labels = c("Earliest 10%", "Mean", "Latest 10%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top",
label.position = "bottom"
)) +
scale_linetype_manual(name = "Lay Date",
values = lay_lines,
labels = c("Earliest 10%", "Mean", "Latest 10%"),
guide = guide_legend(
direction = "horizontal",
title.position = "top",
label.position = "bottom"
) ) +
geom_vline(aes(xintercept = 0), color = "grey", linetype = "dashed", size = 0.5) +
annotate("text", x = 0.01, y = 0.95*8,
label = paste("Inhibition"),
hjust = 0, size = 2) +
annotate("text", x = -0.015, y = 0.95*8,
label = paste("Growth"),
hjust = 1, size = 2) +
geom_point(data = df,
aes(x = Bacteria_Killing_Assay,
y = Clutch_Size),
color = "grey",
alpha = 0.5) +
geom_line(aes(x = plot_data_clutch_ld$Bacteria_Killing_Assay,
y = plot_data_clutch_ld$fit,
group = plot_data_clutch_ld$ylaydate, colour = as.factor(plot_data_clutch_ld$ylaydate),
linetype = as.factor(plot_data_clutch_ld$ylaydate)),
size = 1) +
geom_ribbon(data = plot_data_clutch_ld,
aes(x = Bacteria_Killing_Assay,
ymin = lwr, ymax = upr,
group = ylaydate, fill = as.factor(ylaydate)), alpha = 0.2) +
theme(panel.background = element_rect(fill=NA),
axis.line = element_line(size=1),
legend.position = c(0.5, 0.2),
legend.background = element_rect(fill=NA),
legend.text.align = 0.5,
legend.title.align = 0.5,
legend.key.width = unit(1.5,"cm"),
legend.key = element_rect(fill = NA)) +
labs(title = "",
x = "Prop. of Bacteria Killed",
y = "Clutch size (eggs)",
color = "Lay Date",
linetype = "Lay Date") +
scale_x_continuous(limits = c(-0.2, 1.05), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 8), expand = c(0,0)) +
annotate("text", x = 0.95, y = 0.95*8,
label = paste("n =", nrow(clutch_m2$model)),
hjust = 1); clutch_ld
?ggsave
ggsave("Figure_1.eps", clutch_ld,
"eps", width = 88, height = 88, units = "mm", dpi=300)
ggsave("Figure_2.eps", hourly_provisioning,
"eps", width = 88, height = 88, units = "mm", dpi=300)
ggsave("Figure_1.eps", clutch_ld,
"pdf", width = 88, height = 88, units = "mm", dpi=300)
ggsave("Figure_2.eps", hourly_provisioning,
"pdf", width = 88, height = 88, units = "mm", dpi=300)
ggsave("Figure_2.pdf", hourly_provisioning,
"pdf", width = 88, height = 88, units = "mm", dpi=300)
ggsave("Figure_2.pdf", hourly_provisioning,
"pdf", width = 88, height = 88, units = "mm", dpi=300)
ggsave("Figure_1.pdf", clutch_ld,
"pdf", width = 88, height = 88, units = "mm", dpi=300)
